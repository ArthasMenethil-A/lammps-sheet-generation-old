% this is a matlab code preferably with .mlx format

% length of the bond
a = 3.16;

% sheet length
x = 51;
y = 51;

% distance between S plate and Mo plate 
L = 3.16*cosd(30)/3;
M = 2.42*cosd(30);
d = (M^2 - L^2)^0.5; % N

% overwrite the previous data file with new info
lammps_txt = fopen('D:\Lammps\MoS2\matlab code\data.txt', 'w');
fprintf(lammps_txt, "# " + date + "\n");

fprintf(lammps_txt, "# LAMMPS data file. atom_style full generated by arvin mohammadi\n\n");
fprintf(lammps_txt, "atoms\n");
fprintf(lammps_txt, "2 atom types\n");

fprintf(lammps_txt, "0 " + num2str(x) + " xlo xhi\n");
fprintf(lammps_txt, "0 " + num2str(y) + " ylo yhi\n");
fprintf(lammps_txt, "-10 10 zlo zhi\n\n");

fprintf(lammps_txt, "Masses\n\n");
fprintf(lammps_txt, "1 32.065  # S\n");
fprintf(lammps_txt, "2 95.95 # Mo\n\n");

fprintf(lammps_txt, "Atoms\n");
fprintf(lammps_txt, "# id atom-type x y z \n");

% writing the atoms on the first layer
id = 1;
x_now = 0;
y_now = 0;
z_now = 0;
atome_type = 1;
row = 1; 

while true
    
    
    % checking if we're out of boundaries (if we're out of x boundary we
    % simply move onto the line above, if we're out of y boundary we have
    % completed the job 
    
    if x_now > x
        
        if z_now == 0 || z_now == 2*d
            y_now = y_now + 2.5*a;
            row = row + 1;
            if mod(row, 2) == 1
                x_now = 0;
            elseif mod(row, 2) == 0
                x_now = -a*cosd(30);
            end
            
            
        elseif z_now == d
            y_now = y_now + 2.5*a;
            row = row + 1;
            if mod(row, 2) == 1
                x_now = (2/3*cosd(30)*a)*cosd(60);
            elseif mod(row, 2) == 0
                x_now = (2/3*cosd(30)*a)*cosd(60) -a*cosd(30);
            end
        end
        
        if y_now > y
            z_now = z_now + d;
            row = 1;
            
            if z_now == d
                
                x_now = (2/3*cosd(30)*a)*cosd(60);
                y_now = (2/3*cosd(30)*a)*sind(60);
                atome_type = 2;
                
            elseif z_now == 2*d
                
                x_now = 0;
                y_now = 0;
                atome_type = 1;
                
            elseif z_now > d*2
                break;
                
            end
        end
    end
    
    
    % writing the new atom to data.dat
    temp_string = num2str(id) + " " + num2str(atome_type) + " " + num2str(x_now) + " " + num2str(y_now) + " " + num2str(z_now) + "\n";
    fprintf(lammps_txt, temp_string);
    
    % moving the pointer of x_now and y_now
    % ===============================
    if (mod(row, 2) == 1)
        if (mod(id, 5) == 1)
            x_now = x_now - a*cosd(30);
            y_now = y_now + a*sind(30);
    
        
        elseif (mod(id, 5) == 2)
            y_now = y_now + a;
    
        
        elseif (mod(id, 5) == 3)
            x_now = x_now + a*cosd(30);
            y_now = y_now + a*sind(30);
        
    
        elseif (mod(id, 5) == 4)
            y_now = y_now - a;
           
        
        elseif (mod(id, 5) == 0)
            x_now = x_now + 2*a*cosd(30);
            y_now = y_now - a;
               
        
        end
        
        
    elseif (mod(row, 2) == 0)
        if (mod(id, 5) == 1)
            x_now = x_now + a*cosd(30);
            y_now = y_now + a*sind(30);
    
        
        elseif (mod(id, 5) == 2)
            y_now = y_now + a;
    
        
        elseif (mod(id, 5) == 3)
            x_now = x_now - a*cosd(30);
            y_now = y_now + a*sind(30);
        
    
        elseif (mod(id, 5) == 4)
            y_now = y_now - a;
           
        
        elseif (mod(id, 5) == 0)
            x_now = x_now + 2*a*cosd(30);
            y_now = y_now - a;
               
        
        end
    end
    
    % ================================
    
    
    id = id + 1;
    
end
id - 1